	.file "test/calcu.pas"
###########################
#    Generated by PasC    #
###########################

.section	.text
	.globl	main
	.type	main,@function
main:
	pushl	%ebp
	movl	%esp, %ebp
	subl	$12, %esp
	movl	$5, %eax
	movl	%ebp, %edx
	movl	%eax, -4(%edx)
	movl	$3, %eax
	movl	%ebp, %edx
	movl	%eax, -8(%edx)
	movl	%ebp, %edx
	movl	-8(%edx), %eax
	movl	%ebp, %edx
	movl	-4(%edx), %edi
	addl	%eax, %edi
	movl	%ebp, %edx
	movl	%edi, -12(%edx)
	leal	_$CONST$_L0, %eax
	movl	%eax, %edi
	pushl	%edi
	subl	$4, %esp
	addl	$1, 4(%esp)
	call	_write_string
	addl	$8, %esp
	movl	%ebp, %edx
	movl	-12(%edx), %eax
	pushl	%eax
	subl	$4, %esp
	call	_writeln_int
	addl	$8, %esp
	movl	%ebp, %edx
	movl	-8(%edx), %eax
	movl	%ebp, %edx
	movl	-4(%edx), %edi
	subl	%eax, %edi
	movl	%ebp, %edx
	movl	%edi, -12(%edx)
	leal	_$CONST$_L1, %eax
	movl	%eax, %edi
	pushl	%edi
	subl	$4, %esp
	addl	$1, 4(%esp)
	call	_write_string
	addl	$8, %esp
	movl	%ebp, %edx
	movl	-12(%edx), %eax
	pushl	%eax
	subl	$4, %esp
	call	_writeln_int
	addl	$8, %esp
	movl	%ebp, %edx
	movl	-8(%edx), %eax
	pushl	%eax
	movl	%ebp, %edx
	movl	-4(%edx), %edi
	imull	(%esp), %edi
	subl	$4, %esp
	movl	%ebp, %edx
	movl	%edi, -12(%edx)
	leal	_$CONST$_L2, %eax
	movl	%eax, %edi
	pushl	%edi
	subl	$4, %esp
	addl	$1, 4(%esp)
	call	_write_string
	addl	$8, %esp
	movl	%ebp, %edx
	movl	-12(%edx), %eax
	pushl	%eax
	subl	$4, %esp
	call	_writeln_int
	addl	$8, %esp
	movl	%ebp, %edx
	movl	-8(%edx), %eax
	pushl	%eax
	movl	%ebp, %edx
	movl	-4(%edx), %eax
	cltd
	idivl	(%esp)
	subl	$4, %esp
	movl	%eax, %edi
	movl	%ebp, %edx
	movl	%edi, -12(%edx)
	leal	_$CONST$_L3, %eax
	movl	%eax, %edi
	pushl	%edi
	subl	$4, %esp
	addl	$1, 4(%esp)
	call	_write_string
	addl	$8, %esp
	movl	%ebp, %edx
	movl	-12(%edx), %eax
	pushl	%eax
	subl	$4, %esp
	call	_writeln_int
	addl	$8, %esp
	movl	%ebp, %edx
	movl	-8(%edx), %eax
	pushl	%eax
	movl	%ebp, %edx
	movl	-4(%edx), %eax
	cltd
	idivl	(%esp)
	subl	$4, %esp
	movl	%edx, %edi
	movl	%ebp, %edx
	movl	%edi, -12(%edx)
	leal	_$CONST$_L4, %eax
	movl	%eax, %edi
	pushl	%edi
	subl	$4, %esp
	addl	$1, 4(%esp)
	call	_write_string
	addl	$8, %esp
	movl	%ebp, %edx
	movl	-12(%edx), %eax
	pushl	%eax
	subl	$4, %esp
	call	_writeln_int
	addl	$8, %esp
	leave
	ret
.LFE0:
	.size	main, .-main

.section	.rodata
_$CONST$_L0:
	.string "\0105 + 3 = \000"

_$CONST$_L1:
	.string "\0105 - 3 = \000"

_$CONST$_L2:
	.string "\0105 * 3 = \000"

_$CONST$_L3:
	.string "\0125 div 3 = \000"

_$CONST$_L4:
	.string "\0125 mod 3 = \000"

.ident	"PasC v1.0"
.section	.node.GNU-stack,"",@progbits
