	.file "test/arith.pas"
###########################
#    Generated by PasC    #
###########################

.section	.text
	.globl	main
	.type	main,@function
main:
	pushl	%ebp
	movl	%esp, %ebp
	subl	$17, %esp
	movl	$2, %eax
	movl	%ebp, %edx
	movl	%eax, -4(%edx)
	movl	$3, %eax
	movl	%ebp, %edx
	movl	%eax, -8(%edx)
	movl	$1084856730, %eax
	movl	%ebp, %edx
	movl	%eax, -13(%edx)
	movl	$1080033280, %eax
	movl	%ebp, %edx
	movl	%eax, -17(%edx)
	movl	%ebp, %edx
	movl	-4(%edx), %eax
	movl	%ebp, %edx
	movl	-8(%edx), %ebx
	cmpl	%ebx, %eax
	setl	%al
	movzbl	%al, %edi
	movl	$0, %eax
	cmpl	%edi, %eax
	sete	%al
	movzbl	%al, %edi
	movl	%ebp, %edx
	movl	%edi, %eax
	movb	%al, -9(%edx)
	leal	_$CONST$_L0, %eax
	movl	%eax, %edi
	pushl	%edi
	subl	$4, %esp
	addl	$1, 4(%esp)
	call	_write_string
	addl	$8, %esp
	movl	%ebp, %edx
	movb	-9(%edx), %al
	movzbl	%al, %eax
	pushl	%eax
	subl	$4, %esp
	call	_writeln_int
	addl	$8, %esp
	movl	%ebp, %edx
	movl	-4(%edx), %eax
	movl	%ebp, %edx
	movl	-8(%edx), %ebx
	cmpl	%ebx, %eax
	setl	%al
	movzbl	%al, %edi
	movl	%ebp, %edx
	movl	%edi, %eax
	movb	%al, -9(%edx)
	leal	_$CONST$_L1, %eax
	movl	%eax, %edi
	pushl	%edi
	subl	$4, %esp
	addl	$1, 4(%esp)
	call	_write_string
	addl	$8, %esp
	movl	%ebp, %edx
	movb	-9(%edx), %al
	movzbl	%al, %eax
	pushl	%eax
	subl	$4, %esp
	call	_writeln_int
	addl	$8, %esp
	movl	%ebp, %edx
	movl	-4(%edx), %eax
	movl	%ebp, %edx
	movl	-8(%edx), %ebx
	cmpl	%ebx, %eax
	sete	%al
	movzbl	%al, %edi
	movl	$1, %eax
	xorl	%eax, %edi
	movl	%ebp, %edx
	movl	%edi, %eax
	movb	%al, -9(%edx)
	leal	_$CONST$_L2, %eax
	movl	%eax, %edi
	pushl	%edi
	subl	$4, %esp
	addl	$1, 4(%esp)
	call	_write_string
	addl	$8, %esp
	movl	%ebp, %edx
	movb	-9(%edx), %al
	movzbl	%al, %eax
	pushl	%eax
	subl	$4, %esp
	call	_writeln_int
	addl	$8, %esp
	movl	%ebp, %edx
	movl	-8(%edx), %eax
	movl	%ebp, %edx
	movl	-4(%edx), %ebx
	cmpl	%ebx, %eax
	setl	%al
	movzbl	%al, %edi
	movl	$0, %eax
	cmpl	%edi, %eax
	sete	%al
	movzbl	%al, %edi
	movl	%ebp, %edx
	movl	%edi, %eax
	movb	%al, -9(%edx)
	leal	_$CONST$_L3, %eax
	movl	%eax, %edi
	pushl	%edi
	subl	$4, %esp
	addl	$1, 4(%esp)
	call	_write_string
	addl	$8, %esp
	movl	%ebp, %edx
	movb	-9(%edx), %al
	movzbl	%al, %eax
	pushl	%eax
	subl	$4, %esp
	call	_writeln_int
	addl	$8, %esp
	movl	%ebp, %edx
	movl	-13(%edx), %eax
	pushl	%eax
	movl	%ebp, %edx
	movl	-17(%edx), %eax
	pushl	%eax
	flds	0(%esp)
	flds	4(%esp)
	fxch	%st(1)
	fucomip	%st(1), %st
	fstp	%st(0)
	seta	%al
	movzbl	%al, %edi
	addl	$8, %esp
	movl	$0, %eax
	cmpl	%edi, %eax
	sete	%al
	movzbl	%al, %edi
	movl	%ebp, %edx
	movl	%edi, %eax
	movb	%al, -9(%edx)
	leal	_$CONST$_L4, %eax
	movl	%eax, %edi
	pushl	%edi
	subl	$4, %esp
	addl	$1, 4(%esp)
	call	_write_string
	addl	$8, %esp
	movl	%ebp, %edx
	movb	-9(%edx), %al
	movzbl	%al, %eax
	pushl	%eax
	subl	$4, %esp
	call	_writeln_int
	addl	$8, %esp
	movl	%ebp, %edx
	movl	-13(%edx), %eax
	pushl	%eax
	movl	%ebp, %edx
	movl	-17(%edx), %eax
	pushl	%eax
	flds	0(%esp)
	flds	4(%esp)
	fxch	%st(1)
	fucomip	%st(1), %st
	fstp	%st(0)
	seta	%al
	movzbl	%al, %edi
	addl	$8, %esp
	movl	%ebp, %edx
	movl	%edi, %eax
	movb	%al, -9(%edx)
	leal	_$CONST$_L5, %eax
	movl	%eax, %edi
	pushl	%edi
	subl	$4, %esp
	addl	$1, 4(%esp)
	call	_write_string
	addl	$8, %esp
	movl	%ebp, %edx
	movb	-9(%edx), %al
	movzbl	%al, %eax
	pushl	%eax
	subl	$4, %esp
	call	_writeln_int
	addl	$8, %esp
	movl	%ebp, %edx
	movl	-13(%edx), %eax
	pushl	%eax
	movl	%ebp, %edx
	movl	-17(%edx), %eax
	pushl	%eax
	flds	0(%esp)
	flds	4(%esp)
	fxch	%st(1)
	fucomip	%st(1), %st
	fstp	%st(0)
	setnp	%dl
	movl	$0, %eax
	flds	0(%esp)
	flds	4(%esp)
	fxch	%st(1)
	fucomip	%st(1), %st
	fstp	%st(0)
	cmove	%edx, %eax
	movzbl	%al, %edi
	addl	$8, %esp
	movl	$1, %eax
	xorl	%eax, %edi
	movl	%ebp, %edx
	movl	%edi, %eax
	movb	%al, -9(%edx)
	leal	_$CONST$_L6, %eax
	movl	%eax, %edi
	pushl	%edi
	subl	$4, %esp
	addl	$1, 4(%esp)
	call	_write_string
	addl	$8, %esp
	movl	%ebp, %edx
	movb	-9(%edx), %al
	movzbl	%al, %eax
	pushl	%eax
	subl	$4, %esp
	call	_writeln_int
	addl	$8, %esp
	movl	%ebp, %edx
	movl	-17(%edx), %eax
	pushl	%eax
	movl	%ebp, %edx
	movl	-13(%edx), %eax
	pushl	%eax
	flds	0(%esp)
	flds	4(%esp)
	fxch	%st(1)
	fucomip	%st(1), %st
	fstp	%st(0)
	seta	%al
	movzbl	%al, %edi
	addl	$8, %esp
	movl	$0, %eax
	cmpl	%edi, %eax
	sete	%al
	movzbl	%al, %edi
	movl	%ebp, %edx
	movl	%edi, %eax
	movb	%al, -9(%edx)
	leal	_$CONST$_L7, %eax
	movl	%eax, %edi
	pushl	%edi
	subl	$4, %esp
	addl	$1, 4(%esp)
	call	_write_string
	addl	$8, %esp
	movl	%ebp, %edx
	movb	-9(%edx), %al
	movzbl	%al, %eax
	pushl	%eax
	subl	$4, %esp
	call	_writeln_int
	addl	$8, %esp
	leave
	ret
.LFE0:
	.size	main, .-main

.section	.rodata
_$CONST$_L0:
	.string "\0102 >= 3: \000"

_$CONST$_L1:
	.string "\0092 < 3: \000"

_$CONST$_L2:
	.string "\0102 <> 3: \000"

_$CONST$_L3:
	.string "\0102 <= 3: \000"

_$CONST$_L4:
	.string "\0145.3 >= 3.5: \000"

_$CONST$_L5:
	.string "\0135.3 < 3.5: \000"

_$CONST$_L6:
	.string "\0145.3 <> 3.5: \000"

_$CONST$_L7:
	.string "\0145.3 <= 3.5: \000"

.ident	"PasC v1.0"
.section	.node.GNU-stack,"",@progbits
