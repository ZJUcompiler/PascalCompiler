	.file "test/recurse.pas"
###########################
#    Generated by PasC    #
###########################

.section	.text
	.globl	main
	.type	main,@function
main:
	pushl	%ebp
	movl	%esp, %ebp
	subl	$4, %esp
	movl	$0, %eax
	pushl	%eax
	subl	$4, %esp
	call	fib
	movl	(%esp), %edi
	addl	$8, %esp
	movl	%ebp, %edx
	movl	%edi, -4(%edx)
	movl	%ebp, %edx
	movl	-4(%edx), %eax
	pushl	%eax
	subl	$4, %esp
	call	_writeln_int
	addl	$8, %esp
	movl	$1, %eax
	pushl	%eax
	subl	$4, %esp
	call	fib
	movl	(%esp), %edi
	addl	$8, %esp
	movl	%ebp, %edx
	movl	%edi, -4(%edx)
	movl	%ebp, %edx
	movl	-4(%edx), %eax
	pushl	%eax
	subl	$4, %esp
	call	_writeln_int
	addl	$8, %esp
	movl	$2, %eax
	pushl	%eax
	subl	$4, %esp
	call	fib
	movl	(%esp), %edi
	addl	$8, %esp
	movl	%ebp, %edx
	movl	%edi, -4(%edx)
	movl	%ebp, %edx
	movl	-4(%edx), %eax
	pushl	%eax
	subl	$4, %esp
	call	_writeln_int
	addl	$8, %esp
	movl	$3, %eax
	pushl	%eax
	subl	$4, %esp
	call	fib
	movl	(%esp), %edi
	addl	$8, %esp
	movl	%ebp, %edx
	movl	%edi, -4(%edx)
	movl	%ebp, %edx
	movl	-4(%edx), %eax
	pushl	%eax
	subl	$4, %esp
	call	_writeln_int
	addl	$8, %esp
	movl	$4, %eax
	pushl	%eax
	subl	$4, %esp
	call	fib
	movl	(%esp), %edi
	addl	$8, %esp
	movl	%ebp, %edx
	movl	%edi, -4(%edx)
	movl	%ebp, %edx
	movl	-4(%edx), %eax
	pushl	%eax
	subl	$4, %esp
	call	_writeln_int
	addl	$8, %esp
	movl	$5, %eax
	pushl	%eax
	subl	$4, %esp
	call	fib
	movl	(%esp), %edi
	addl	$8, %esp
	movl	%ebp, %edx
	movl	%edi, -4(%edx)
	movl	%ebp, %edx
	movl	-4(%edx), %eax
	pushl	%eax
	subl	$4, %esp
	call	_writeln_int
	addl	$8, %esp
	movl	$6, %eax
	pushl	%eax
	subl	$4, %esp
	call	fib
	movl	(%esp), %edi
	addl	$8, %esp
	movl	%ebp, %edx
	movl	%edi, -4(%edx)
	movl	%ebp, %edx
	movl	-4(%edx), %eax
	pushl	%eax
	subl	$4, %esp
	call	_writeln_int
	addl	$8, %esp
	movl	$7, %eax
	pushl	%eax
	subl	$4, %esp
	call	fib
	movl	(%esp), %edi
	addl	$8, %esp
	movl	%ebp, %edx
	movl	%edi, -4(%edx)
	movl	%ebp, %edx
	movl	-4(%edx), %eax
	pushl	%eax
	subl	$4, %esp
	call	_writeln_int
	addl	$8, %esp
	movl	$8, %eax
	pushl	%eax
	subl	$4, %esp
	call	fib
	movl	(%esp), %edi
	addl	$8, %esp
	movl	%ebp, %edx
	movl	%edi, -4(%edx)
	movl	%ebp, %edx
	movl	-4(%edx), %eax
	pushl	%eax
	subl	$4, %esp
	call	_writeln_int
	addl	$8, %esp
	leave
	ret
.LFE0:
	.size	main, .-main

	.globl	 fib
	.type	 fib,@function
fib:
	pushl	%ebp
	movl	%esp, %ebp
	subl	$0, %esp
	movl	%ebp, %edx
	movl	12(%edx), %eax
	movl	$1, %ebx
	cmpl	%ebx, %eax
	sete	%al
	movzbl	%al, %edi
	pushl	%edi
	movl	%ebp, %edx
	movl	12(%edx), %eax
	movl	$0, %ebx
	cmpl	%ebx, %eax
	sete	%al
	movzbl	%al, %esi
	popl	%edi
	orl	%esi, %edi
	cmpl	$0, %edi
	je	_$JMP$_L0
	movl	$1, %eax
	movl	%ebp, %edx
	movl	%eax, 8(%edx)
	jmp	_$JMP$_L1
_$JMP$_L0:
	movl	$1, %eax
	movl	%ebp, %edx
	movl	12(%edx), %edi
	subl	%eax, %edi
	pushl	%edi
	subl	$4, %esp
	call	fib
	movl	(%esp), %edi
	addl	$8, %esp
	pushl	%edi
	movl	$2, %eax
	movl	%ebp, %edx
	movl	12(%edx), %edi
	subl	%eax, %edi
	pushl	%edi
	subl	$4, %esp
	call	fib
	movl	(%esp), %esi
	addl	$8, %esp
	popl	%edi
	addl	%esi, %edi
	movl	%ebp, %edx
	movl	%edi, 8(%edx)
_$JMP$_L1:
	leave
	ret
.LFE1:
	.size	fib, .-fib

.section	.rodata
.ident	"PasC v1.0"
.section	.node.GNU-stack,"",@progbits
